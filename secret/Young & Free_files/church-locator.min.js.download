document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".open-locator-button").forEach(button=>{button.addEventListener("click",function(){document.querySelector(".church-locator--header").classList.add("church-locator--header--visible")})})}),$(()=>{const isMobile=()=>window.innerWidth<=768,$churchLocators=$(".church-locator"),$churchLocatorToggle=$(".church-locator__toggle"),$headerChurchLocator=$(".church-locator--header"),$findChurchDarkOverlay=$(".church-locator__overlay");$churchLocatorToggle.click(()=>{$headerChurchLocator.toggleClass("church-locator--header--visible"),$headerChurchLocator.hasClass("church-locator--header--visible")&&window.innerWidth<=768&&toggleNav()}),$churchLocators.each((index,churchLocator)=>{let map=null,markers=[];const isHeader=()=>$churchLocator.hasClass("church-locator--header"),mapBoxApi=async(apiEndpoint,params={})=>{let url=new URL(`https://api.mapbox.com${apiEndpoint}`);for(param in url.searchParams.append("access_token",MAPBOX_TOKEN.token),params)url.searchParams.append(param,params[param]);const response=await fetch(url.toString());return await response.json()},getOnlineChurch=async()=>{return await(async apiEndPoint=>{const url=new URL(`${SITE_URL.url}/wp-json/hillsong/v1/${apiEndPoint}`),response=await fetch(url.toString(),{cache:"no-cache"});return await response.json()})("churches/online/")};let searchReady=!0,searchChanged=!1,searchSelected=!1,userCoordinatesByIp=!1,userCountryByIpFetched=!1;const searchAddress=async _address=>{if(searchSelected=!1,searchChanged=!0,searchReady){searchReady=!1,userCountryByIpFetched||(userCountryByIpFetched=!0,fetchUserCountry()),setTimeout(()=>{searchReady=!0,searchChanged&&!searchSelected&&searchAddress($searchBox.val())},1500),searchChanged=!1;const addresses=await(async address=>{const parameters={autocomplete:!0,types:"region,postcode,district,place,locality,neighborhood,address,poi"};return userCoordinatesByIp&&(parameters.proximity=`${userCoordinatesByIp[0]},${userCoordinatesByIp[1]}`),(await mapBoxApi(`/geocoding/v5/mapbox.places/${address}.json`,parameters)).features})(_address);clearAutocomplete();for(const _address of addresses){const $div=$(`<div>${_address.place_name}<div>`);$div.click(()=>{searchSelected=!0,clearAutocomplete(),long=_address.center[0],lat=_address.center[1],address=_address.place_name,$searchButton.show(),$searchBox.val(address)}),$autocompleteContainer.append($div)}$autocompleteContainer.show()}},fetchUserCountry=async()=>{try{const geoResponse=await fetch("https://get.geojs.io/v1/ip/geo.json"),geoJson=await geoResponse.json();return userCoordinatesByIp=[geoJson.longitude,geoJson.latitude],searchChanged=!0,!0}catch(e){return console.log("failed to fetch user country"),!1}},clearAutocomplete=()=>{$autocompleteContainer.hide(),$autocompleteContainer.empty()};let long,lat,churches,address,searching=!1;const updateChurches=async()=>{searching=!0,console.log("updateChurches");const url=new URL(`https://get-church-campus.hillsong.workers.dev/${long},${lat}`),response=await fetch(url.toString(),{cache:"no-cache"});if($searchBox.val(""),churches=await response.json(),$resultsList.empty(),0===churches.length){showListView();const church=await getOnlineChurch();$resultsHeader.hide(),$slider.hide(),showListView();const $noChurchDiv=$("<div>There isn't a Hillsong Church location near you.</div>");let $div;$noChurchDiv.css("margin-bottom","20px"),$noChurchDiv.css("font-size","13px"),$noChurchDiv.css("line-height","20px"),isMobile()&&$noChurchDiv.css("padding","0 40px 20px"),$resultsList.append($noChurchDiv),$div=isHeader()?isMobile()?createChurchCard(church):createListItem(church):createBasicChurchCard(church),$resultsList.append($div)}else{$resultsHeader.show(),$slider.show();for(const church of churches){let $div;$div=isHeader()?isMobile()?createChurchCard(church):createListItem(church):createBasicChurchCard(church),$resultsList.append($div)}$resultsHeader.show(),$divider.show()}$searchButton.show(),$searchLoader.hide(),$searchContainer.fadeOut(),$resultsContainer.fadeIn(),$resultsContainer.css("display","flex"),$churchLocator.addClass("church-locator--results"),showListView(),searching=!1},createBasicChurchCard=church=>{const $card=$basicCardTemplate.clone();return $card.removeClass("church-locator__basic-card--template"),$card.find(".church-locator__basic-card__campus-name").text(church.campus_name),$card.find(".church-locator__basic-card__venue-name").text(church.venue_name),$card.find(".church-locator__basic-card__address").text(church.location.address),$card.find(".church-locator__basic-card__link").attr("href",church.url),$card},createChurchCard=church=>{const $card=$cardTemplate.clone();$card.removeClass("church-locator__card--template"),church.background_image?$card.find(".church-locator__card__image").css("background-image",`url(${church.background_image})`):$card.find(".church-locator__card__image").remove(),$card.find(".church-locator__card__image").css("background-image",`url(${church.background_image})`),$card.find(".church-locator__card__campus-name").text(church.campus_name),$card.find(".church-locator__card__venue-name").text(church.venue_name),$card.find(".church-locator__card__address").text(church.location.address),$card.find(".church-locator__card__directions").attr("href",getDirectionsLink(church)),$card.find(".church-locator__card__link").attr("href",church.url),church.new||$card.find(".church-locator__card__new").remove(),church.information.free_parking||$card.find(".church-locator__card__free-parking").remove(),church.information.close_to_public_transport||$card.find(".church-locator__card__close-public-transport").remove(),church.information.wheelchair_accessible||$card.find(".church-locator__card__wheelchair").remove(),church.information.parents_room||$card.find(".church-locator__card__parents-room").remove(),church.information.interpretation_available||$card.find(".church-locator__card__interpretation").remove(),isMobile()||$card.find(".church-locator__card__link").css("color","white"),$card.find(".church-location__card__email").text(church.email),$card.find(".church-location__card__phone").text(church.phone),church.gathering_online&&$card.find(".church-locator__card__gathering-online").css("display","block");const $serviceTimesLabel=$card.find(".church-locator__card__service-times-label"),$serviceTimesInformation=$card.find(".church-locator__card__service-times-information"),$image=$card.find(".church-locator__card__image"),$filler=$card.find(".church-locator__card__filler");$serviceTimesLabel.css("cursor","pointer"),$serviceTimesLabel.click(()=>{$serviceTimesLabel.toggleClass("church-locator__card__service-times-label--active"),$serviceTimesLabel.hasClass("church-locator__card__service-times-label--active")?($serviceTimesInformation.css("flex","1"),$serviceTimesInformation.css("display","flex"),$image.css("height","0%"),$filler.css("flex","none")):($serviceTimesInformation.css("flex","none"),$image.css("height","60%"),$filler.css("flex","1"))});let timesCount=0;for(const day in church.service_times)timesCount+=church.service_times[day].length;const $column1=$card.find(".church-locator__card__service-times-1"),$column2=$card.find(".church-locator__card__service-times-2");let remainingTimes=timesCount;for(const day in church.service_times){const times=church.service_times[day];if(!times.length)continue;const $timesContainer=$("<div></div>");for(const time of times)$timesContainer.append(`<div>${time}</div>`);const $dayContainer=$("<div></div>");$dayContainer.css("display","flex");const $dayDiv=$(`<div>${day}</div>`);$dayDiv.css("width","80px"),$dayDiv.css("font-weight","bold"),$dayContainer.append($dayDiv),$dayContainer.append($timesContainer),remainingTimes!==timesCount&&remainingTimes-times.length<timesCount/2?$column2.append($dayContainer):$column1.append($dayContainer),remainingTimes-=times.length}return church.online&&$card.find(".church-locator__card__address-container").remove(),$card};let $currentCard;const createListItem=church=>{const $listItem=$listItemTemplate.clone();if($listItem.removeClass("church-locator__list-item--template"),$listItem.find(".church-locator__list-item__name").text(church.campus_name),church.location.address)$listItem.find(".church-locator__list-item__address").text(church.location.address);else if(church.description){const description=$(church.description).html();$listItem.find(".church-locator__list-item__address").html(description)}return church.distance&&$listItem.find(".church-locator__list-item__distance").text(Math.round(church.distance)+"km"),church.online&&$listItem.find(".church-locator__list-item__logo").find("i").removeClass("fa-map-marker-alt").addClass("fa-globe"),$listItem.mouseenter(()=>{const timeOut=setTimeout(()=>{slideChurchCard(church)},300);$listItem.mouseleave(()=>{clearTimeout(timeOut)})}),$listItem},slideChurchCard=church=>{closeCurrentCard(),($currentCard=createChurchCard(church)).insertAfter($churchLocator),requestAnimationFrame(()=>{$currentCard.addClass("church-locator__card--active")})},closeCurrentCard=(closeLocator=!1)=>{if($currentCard){const $_currentCard=$currentCard;closeLocator&&($_currentCard.css("left",-$_currentCard.width()),$_currentCard.css("transition","left 0.7s ease-in-out")),$_currentCard.on("transitionend webkitTransitionEnd oTransitionEnd",()=>{$_currentCard.remove()}),$_currentCard.removeClass("church-locator__card--active")}},addMapChurchCard=church=>{$mapChurch.empty();const $churchCard=createChurchCard(church);$mapChurch.append($churchCard)},addMapChurchInfo=church=>{$mapChurch.empty();const $churchCard=createBasicChurchCard(church);$mapChurch.append($churchCard)},getDirectionsLink=church=>`https://www.google.com/maps/dir/?api=1&destination=${church.location.address}&origin=${address}`;let mapInitialised=!1;const showListView=()=>{$mapViewButton.css("font-weight","initial"),$listViewButton.css("font-weight","bold"),closeCurrentCard(),$slider.css("left",0),$mapView.fadeOut(),$listView.fadeIn()},$churchLocator=$(churchLocator),$close=$(".church-locator__close"),$useMyLocation=$churchLocator.find(".church-locator__use-my-location"),$searchBox=$churchLocator.find(".church-locator__search-box"),$searchContainer=$churchLocator.find(".church-locator__search-container"),$resultsContainer=$churchLocator.find(".church-locator__results-container"),$backButton=$churchLocator.find(".church-locator__back-button"),$resultsList=$churchLocator.find(".church-locator__results-body__list"),$resultsHeader=$churchLocator.find(".church-locator__results-header"),$listViewButton=$churchLocator.find(".church-locator__results-header__list"),$mapViewButton=$churchLocator.find(".church-locator__results-header__map"),$divider=$churchLocator.find(".church-locator__results-divider"),$slider=$churchLocator.find(".church-locator__results-divider__slider"),$listView=$churchLocator.find(".church-locator__results-body__list"),$mapView=$churchLocator.find(".church-locator__results-body__map-container"),$map=$churchLocator.find(".church-locator__results-body__map"),$cardTemplate=$churchLocator.find(".church-locator__card--template"),$basicCardTemplate=$churchLocator.find(".church-locator__basic-card--template"),$listItemTemplate=$churchLocator.find(".church-locator__list-item--template"),$autocompleteContainer=$churchLocator.find(".church-locator__search-autocomplete-container"),$mapChurch=$churchLocator.find(".church-locator__results-body__map-church"),$searchButton=$churchLocator.find(".church-locator__search-button"),$searchLoader=$churchLocator.find(".church-locator__search-loader"),$myLocationAlert=$churchLocator.find(".church-locator_my-location-alert");$map.attr("id",`map-${index}`),$useMyLocation.click(()=>{if(searching)return;$useMyLocation.addClass("spinner");navigator.geolocation.getCurrentPosition(position=>{(async(_long,_lat)=>{const response=await mapBoxApi(`/geocoding/v5/mapbox.places/${_long},${_lat}.json`);address=response.features[0].place_name,$searchBox.val(address),long=_long,lat=_lat,$searchButton.show()})(position.coords.longitude,position.coords.latitude),$useMyLocation.removeClass("spinner")},()=>{$myLocationAlert.show(),$useMyLocation.removeClass("spinner"),$useMyLocation.css("background-color","#CCC")})}),$close.click(()=>{$headerChurchLocator.removeClass("church-locator--header--visible"),closeCurrentCard(!0)}),$findChurchDarkOverlay.click(()=>{$headerChurchLocator.removeClass("church-locator--header--visible"),closeCurrentCard(!0)}),$searchBox.keyup(event=>{if($myLocationAlert.hide(),searching)return;$searchButton.hide();const search=event.target.value;search.length>3?searchAddress(search):clearAutocomplete()}),$backButton.click(()=>{closeCurrentCard(),$resultsContainer.fadeOut(),$searchContainer.fadeIn(),$churchLocator.removeClass("church-locator--results")}),$listViewButton.click(()=>{showListView()}),$mapViewButton.click(()=>{(()=>{$listViewButton.css("font-weight","initial"),$mapViewButton.css("font-weight","bold"),closeCurrentCard(),$slider.css("left",$divider.width()-$slider.width()),$mapView.fadeIn(),!isMobile()&&isHeader()&&$mapView.css("height","100%"),$listView.fadeOut(),mapInitialised?(map.setCenter([long,lat]),map.setZoom(6),markers.forEach(marker=>marker.remove()),markers=[]):(mapboxgl.accessToken=MAPBOX_TOKEN.token,map=new mapboxgl.Map({container:`map-${index}`,center:[long,lat],zoom:6,style:"mapbox://styles/mapbox/streets-v11"}),mapInitialised=!0);const bounds=new mapboxgl.LngLatBounds;for(const church of churches){const marker=(new mapboxgl.Marker).setLngLat([church.location.lng,church.location.lat]).addTo(map);$(marker.getElement()).click(()=>{!isMobile()&&isHeader()?slideChurchCard(church):isHeader()?addMapChurchCard(church):addMapChurchInfo(church)}),bounds.extend([church.location.lng,church.location.lat]),markers.push(marker)}map.fitBounds(bounds,{padding:50,maxZoom:15})})()}),$searchButton.click(()=>{$myLocationAlert.hide(),searching||($searchButton.hide(),$searchLoader.show(),clearAutocomplete(),updateChurches())})})});